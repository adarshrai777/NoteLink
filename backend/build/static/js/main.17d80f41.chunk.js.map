{"version":3,"sources":["components/AssignmentForm.js","components/QueryForm.js","components/SearchResults.js","components/Header.js","services/Documents.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","submit","margin","AssignmentForm","Name","Url","Username","nameHandler","urlHandler","addHandler","usernameHandler","classes","className","Typography","component","variant","style","fontWeight","TextField","required","size","fullWidth","value","onChange","m","label","autoFocus","Button","backgroundColor","type","onClick","startIcon","src","alt","QueryForm","Query","queryHandler","gridStyles","root","minWidth","background","title","fontSize","pos","marginBottom","SearchResults","results","visibility","length","Grid","container","padding","map","result","item","xs","sm","md","lg","xl","height","width","Card","CardContent","color","gutterBottom","fileName","user","CardActions","target","href","url","id","Header","methods","getAll","a","axios","get","res","data","add","newFile","post","App","useState","setName","setUrl","setQuery","setUsername","Uploads","setUploads","QueryResults","setResults","useEffect","filesService","then","console","log","Container","maxWidth","event","preventDefault","validator","isURL","concat","loadingGif","document","querySelector","doneGif","setTimeout","catch","err","alert","query","filter","toLowerCase","includes","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17d80f41.chunk.js","sourcesContent":["import {Button, makeStyles, Typography, TextField} from '@material-ui/core/';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst AssignmentForm = ({ Name, Url, Username, nameHandler, urlHandler, addHandler , usernameHandler}) => {\n    const classes = useStyles();\n    return (\n    <div className={classes.paper}>\n        <Typography component=\"h4\" variant=\"h4\" style={{fontWeight:600}}>\n            Create a new entry\n        </Typography>\n        <form>\n            <TextField \n                required \n                size=\"small\" \n                fullWidth \n                margin=\"normal\"\n                value={Name} \n                onChange={nameHandler}\n                m={5}\n                variant=\"outlined\" \n                label=\"Name of the document\"\n                autoFocus />\n        \n            <TextField \n                required \n                size=\"small\" \n                fullWidth             \n                margin=\"normal\"\n                value={Url} \n                onChange={urlHandler}\n                variant=\"outlined\" \n                label=\"url\"\n                autoFocus/>\n        \n            <TextField \n                required \n                size=\"small\" \n                fullWidth \n                margin=\"normal\"\n                value={Username} \n                onChange={usernameHandler}\n                variant=\"outlined\" \n                label=\"You name\"\n                autoFocus/>\n        \n        </form>\n            <Button \n                style = {{\n                    backgroundColor:\"#BB86FC\"\n                }}\n                variant=\"contained\" \n                type=\"submit\"\n                onClick={addHandler}\n                className={classes.submit}\n                startIcon={<SaveIcon />}>\n                save\n            </Button>\n            <img className=\"loading\" src={\"https://i.pinimg.com/originals/2c/bb/5e/2cbb5e95b97aa2b496f6eaec84b9240d.gif\"} alt=\"loading\"/>\n            <img className=\"done\" src={\"https://i.pinimg.com/originals/37/78/db/3778dbeebfe43a60eca57c5aecfdcf0d.gif\"} alt=\"loading\"/>\n    </div>\n)};\n\nexport default AssignmentForm;","import {makeStyles, Typography, TextField} from '@material-ui/core/';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst QueryForm = ({ Query, queryHandler}) => {\n    const classes = useStyles();\n    return (\n    <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n            or\n        </Typography>\n        \n        <Typography style={{fontWeight:600}} component=\"h1\" variant=\"h5\">\n            Search for the document\n        </Typography>\n\n        <form>            \n            <TextField \n                required \n                size=\"small\" \n                fullWidth\n                value={Query} \n                onChange={queryHandler}\n                margin=\"normal\"\n                variant=\"standard\" \n                label=\"search\"/>\n        </form>\n    </div>\n)}\n\nexport default QueryForm;","import {Button, Grid, makeStyles, Typography} from '@material-ui/core/';\nimport {Card, CardActions, CardContent} from \"@material-ui/core\"\n\nconst gridStyles = makeStyles({\n    root: {\n        minWidth: 100,\n        background: \"#FFFFFF\"\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    }\n});\n\nconst SearchResults = ({results}) =>{ \n    const classes = gridStyles();\n\n    let visibility = \"resultgrid\";\n    if (results.length === 0) {\n        visibility = \"hidden\"\n    }\n\n    return (\n        <Grid \n            className={visibility} \n            container \n            spacing={10}\n            style={{padding: '24px'}}>\n            {results.map(result => (\n                <Grid \n                    item\n                    xs={12} sm={6} md={4} lg={4} xl={3}\n                    className=\"result\" \n                    key={result.id} \n                    height={140}\n                    width={120}>\n                    \n                    <Card className={classes.root}>\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Name\n                            </Typography>\n\n                            <Typography variant=\"h5\" component=\"h2\">\n                                {result.fileName}\n                            </Typography>\n\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                by - \n                            </Typography>\n\n                            <Typography variant=\"body2\" component=\"p\">\n                                {result.user}\n                            </Typography>\n                            \n                        </CardContent>\n                        \n                        <CardActions>\n                            <Button \n                                style={{\n                                    backgroundColor: \"#6c00b4\",\n                                    color: \"white\"\n                                }}\n                                label=\"url\" \n                                variant=\"contained\" \n                                target=\"_blank\" \n                                href={result.url}>\n                                    link\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n\nexport default SearchResults;","const Header = () => {\n    return (\n        <h1 className=\"header\" style={{fontWeight:550}}>\n            NoteLink \n        </h1>\n    )\n}\n\nexport default Header;","import axios from \"axios\";\n\nconst url = \"/api/files\";\n\nconst getAll = async () => {\n    const res = await axios.get(url);\n    return res.data;\n}\n\nconst add = async (newFile) => {\n    const res = axios.post(url, newFile);\n    return (await res).data;\n};\n\nconst methods = {\n    getAll,\n    add\n}\n\nexport default methods;","import {useState, useEffect, React} from 'react'\nimport Container from '@material-ui/core/Container';\n\nimport validator from 'validator'\n\nimport AssignmentForm from \"./components/AssignmentForm\"\nimport QueryForm from \"./components/QueryForm\"\nimport SearchResults from \"./components/SearchResults\"\nimport Header from \"./components/Header\"\n\nimport filesService from \"./services/Documents\"\n\nconst App = () => {\n    // state variables\n    const [Name, setName] = useState(\"\")\n    const [Url, setUrl] = useState(\"\")\n    const [Query, setQuery] = useState(\"\")\n    const [Username, setUsername] = useState(\"\")\n    const [Uploads, setUploads] = useState([])\n    const [QueryResults, setResults] = useState([])\n\n    useEffect(() => {\n        filesService.getAll()\n        .then(res => {\n            console.log('fetched !');\n            setUploads(res)})\n    }, [])\n\n    // handlers\n    const nameHandler = (event) => {\n        setName(event.target.value);\n    }\n\n    const urlHandler = (event) => {\n        setUrl(event.target.value);\n    }\n\n    const usernameHandler = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const queryHandler = (event) => {\n        const query = event.target.value;\n        setQuery(query);\n\n        if (query) {\n            setResults(Uploads.filter(result => \n                result.fileName.toLowerCase().includes(query.toLowerCase())\n            ));\n        }else{\n            setResults([]);\n        }\n    }\n\n    const addHandler = (event) => {\n        // validate and send to server\n        event.preventDefault();\n\n        if (!(Name && Url && Username)) {\n            alert(\"some fields are empty !\");\n            return\n        }\n\n        if (!validator.isURL(Url)) {\n            alert(\"not a valid url !\")\n            return\n        }\n\n        const newFile = {\n            fileName: Name,\n            url: \"//\".concat(Url),\n            user: Username\n        }\n        \n        const loadingGif = document.querySelector(\".loading\");\n        const doneGif = document.querySelector(\".done\");\n        loadingGif.style.display = \"block\";\n\n        filesService.add(newFile).then(result =>{ \n            setUploads(Uploads.concat(result));\n            setName(\"\");\n            setUrl(\"\");\n            setUsername(\"\");\n            loadingGif.style.display = \"none\";\n\n            doneGif.style.display = \"block\";\n            setTimeout(() => {doneGif.style.display = 'none'}, 4000);\n\n        }).catch(err => {\n            loadingGif.display = \"none\";\n            console.log(err)})\n    }\n\n    return (\n        <Container className=\"mainContainer\" component=\"main\">\n            <Container maxWidth=\"xs\">\n                <Header/>\n                <AssignmentForm\n                    Name = {Name} \n                    Url = {Url} \n                    Username = {Username}\n                    nameHandler = {nameHandler} \n                    urlHandler = {urlHandler}\n                    usernameHandler = {usernameHandler}\n                    addHandler = {addHandler}\n                />\n        \n                <QueryForm\n                    Query = {Query}\n                    queryHandler = {queryHandler}\n                />\n            </Container>\n\n            <SearchResults\n                results = {QueryResults}\n            />\n\n        </Container>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}